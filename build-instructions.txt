# Requirements
# - Elixir 1.5.2
# - Postgres 9.*
# - Nodejs 8
# - Git

# Initial setup
echo -e '\n## Allow ec2-user to set env when sudoing\nec2-user\tALL=(ALL)\tSETENV: ALL\nec2-user\tALL=(ALL)\tNOPASSWD: ALL' | sudo tee --append /etc/sudoers

# Install Erlang + Elixir
sudo yum install ncurses-devel openssl-devel -y
sudo yum groupinstall "Development Tools" -y
cd /tmp
wget "http://erlang.org/download/otp_src_20.1.tar.gz" -O otp20.tar.gz
tar xfz otp20.tar.gz
cd otp_src_20.1/
./configure
make && sudo make install
cd /tmp
wget "https://github.com/elixir-lang/elixir/archive/v1.5.2.tar.gz"
tar xfz v1.5.2.tar.gz
cd elixir-1.5.2/
export PATH="${PATH}:/usr/local/bin"
for link in /usr/local/bin/*; do filename=`basename $link`; sudo ln -s $(readlink -f /usr/local/bin/$filename) /usr/bin/$filename; done
make && sudo make install
mix local.hex --force
mix local.rebar --force

for link in /usr/local/bin/*; do filename=`basename $link`; sudo ln -s $(readlink -f /usr/local/bin/$filename) /usr/bin/$filename; done

# Install postgres
sudo yum install postgresql96-server -y
sudo sed -i.bak -e 's/ident$/trust/' /var/lib/pgsql96/data/pg_hba.conf
sudo service postgresql96 initdb
sudo /sbin/chkconfig --levels 235 postgresql96 on
sudo service postgresql96 start

# Install Nodejs
curl --silent --location https://rpm.nodesource.com/setup_8.x | sudo bash -
sudo yum install nodejs -y

# Install Git
sudo yum install git -y

# Use postgres and create user, db and privileges
sudo su - postgres
createuser cdb
createdb cdb_prod
psql
ALTER USER cdb WITH ENCRYPTED PASSWORD '<password>';
GRANT ALL PRIVILEGES ON DATABASE cdb_prod TO cdb;
\q
exit

# Clone repo
git clone git@github.com:samueljmurray/cdb.git






# Run locally
scp ./config/prod.secret.exs <REMOTE>:~
ssh <REMOTE> ~/build.sh

# Run on box (build.sh):
cd ~/cdb
git pull
cp ~/prod.secret.exs ~/cdb/config/prod.secret.exs
cd cdb
mix deps.get
cd assets && npm install && cd ..
cd assets && ./node_modules/brunch/bin/brunch b -p && cd ..
MIX_ENV=prod mix phoenix.digest
MIX_ENV=prod mix release
mkdir ~/cdb-LIVE_new
tar -xzf ~/cdb/_build/prod/rel/cdb/releases/0.0.1/cdb.tar.gz -C ~/cdb-LIVE_new
rm ~/cdb/_build
[ -e ~/cdb-LIVE/bin/cdb ] && sudo ~/cdb-LIVE/bin/cdb stop
rm -rf ~/cdb-LIVE
mv ~/cdb-LIVE_new ~/cdb-LIVE
~/cdb-LIVE/bin/cdb migrate
sudo PORT=80 ~/cdb-LIVE/bin/cdb start